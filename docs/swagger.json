{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/ping": {
            "get": {
                "description": "Returns a simple response to test connectivity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Ping the server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ping.Response"
                        }
                    }
                }
            }
        },
        "/statistics": {
            "get": {
                "description": "Retrieve time series data in denormalized form.",
                "consumes": [
                    "application/json",
                    " text/csv"
                ],
                "produces": [
                    "application/json",
                    " text/csv"
                ],
                "tags": [
                    "subreddit"
                ],
                "summary": "Retrieve time series data in denormalized form.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "subreddit_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "[",
                        "name": "rank_order_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "[",
                        "name": "rank_order_created_within_past",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "1=Minute,2=QuarterHour,3=Hour,4=Daily,5=Monthly",
                        "name": "granularity",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "true=backfill incomplete data",
                        "name": "backfill",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statistics.GetStatisticsResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/statistics.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task": {
            "post": {
                "description": "Schedule a job to get subreddit with the given parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Create a new task to mine subreddit periodically",
                "parameters": [
                    {
                        "description": "Create Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task.CreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/task.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Schedule a job to get subreddit with the given parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Removes a task",
                "parameters": [
                    {
                        "description": "Delete Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task.DeleteRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/task.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "delete": {
                "description": "Get tasks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get tasks.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/task.ListResponseBodyData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/task.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_noellimx_hepmilserver_src_controller_mux_statistics.Post": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "author_name": {
                    "type": "string"
                },
                "comment_count": {
                    "type": "integer"
                },
                "data_ks_id": {
                    "type": "string"
                },
                "is_synthetic": {
                    "type": "boolean"
                },
                "perma_link_path": {
                    "type": "string"
                },
                "polled_time": {
                    "type": "string"
                },
                "polled_time_rounded_min": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "rank_order_created_within_past": {
                    "$ref": "#/definitions/statistics.CreatedWithinPast"
                },
                "rank_order_type": {
                    "$ref": "#/definitions/statistics.OrderByAlgo"
                },
                "score": {
                    "type": "integer"
                },
                "subreddit_id": {
                    "type": "string"
                },
                "subreddit_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ping.Response": {
            "type": "object"
        },
        "statistics.CreatedWithinPast": {
            "type": "string",
            "enum": [
                "hour",
                "day",
                "month",
                "year"
            ],
            "x-enum-varnames": [
                "CreatedWithinPastHour",
                "CreatedWithinPastDay",
                "CreatedWithinPastMonth",
                "CreatedWithinPastYear"
            ]
        },
        "statistics.ErrorResponse": {
            "type": "object"
        },
        "statistics.GetStatisticsResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/statistics.GetStatisticsResponseBodyData"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "statistics.GetStatisticsResponseBodyData": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_noellimx_hepmilserver_src_controller_mux_statistics.Post"
                    }
                }
            }
        },
        "statistics.OrderByAlgo": {
            "type": "string",
            "enum": [
                "top",
                "best",
                "hot",
                "new"
            ],
            "x-enum-varnames": [
                "OrderByAlgoTop",
                "OrderByAlgoBest",
                "OrderByAlgoHot",
                "OrderByAlgoNew"
            ]
        },
        "task.CreateRequestBody": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "to be executed every interval [\"hour\"]",
                    "type": "string"
                },
                "min_item_count": {
                    "description": "Minimum Item Count to retrieve",
                    "type": "integer"
                },
                "order_by": {
                    "description": "[\"top\", \"hot\", \"best\", \"new\"]",
                    "type": "string"
                },
                "posts_created_within_past": {
                    "description": "[\"day\",\"hour\",\"month\",\"year\"]",
                    "type": "string"
                },
                "subreddit_name": {
                    "description": "Subreddit Name",
                    "type": "string"
                }
            }
        },
        "task.CreatedWithinPast": {
            "type": "string",
            "enum": [
                "hour",
                "day",
                "month",
                "year"
            ],
            "x-enum-varnames": [
                "CreatedWithinPastHour",
                "CreatedWithinPastDay",
                "CreatedWithinPastMonth",
                "CreatedWithinPastYear"
            ]
        },
        "task.DeleteRequestBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "task.ErrorResponse": {
            "type": "object"
        },
        "task.Granularity": {
            "type": "string",
            "enum": [
                "hour"
            ],
            "x-enum-varnames": [
                "GranularityHour"
            ]
        },
        "task.ListResponseBodyData": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.Task"
                    }
                }
            }
        },
        "task.OrderByAlgo": {
            "type": "string",
            "enum": [
                "top",
                "best",
                "hot",
                "new"
            ],
            "x-enum-varnames": [
                "OrderByAlgoTop",
                "OrderByAlgoBest",
                "OrderByAlgoHot",
                "OrderByAlgoNew"
            ]
        },
        "task.Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/task.Granularity"
                },
                "min_item_count": {
                    "type": "integer"
                },
                "order_by": {
                    "$ref": "#/definitions/task.OrderByAlgo"
                },
                "posts_created_within_past": {
                    "$ref": "#/definitions/task.CreatedWithinPast"
                },
                "subreddit_name": {
                    "type": "string"
                }
            }
        }
    }
}